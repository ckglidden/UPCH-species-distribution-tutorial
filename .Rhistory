geom_point(data = subset(pnts_mdd, scientificName == names[87]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[88]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[89]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[90]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[91]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[92]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[93]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[94]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[95]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[96]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[97]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[98]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[99]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[100]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[101]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[102]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[103]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[103]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[104]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[105]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[106]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[107]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[108]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[109]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[110]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[111]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[112]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[113]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[114]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[115]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[116]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[117]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[118]
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Synallaxis rutilan", c("lon", "lat")], r, n=1) #136 obs for focal species
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Synallaxis rutilan", c("lon", "lat")], r, n=1) #136 obs for focal species
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[119]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[120]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[121]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[122]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[122]
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Thamnophilus aethiops", c("lon", "lat")], r, n=1) #136 obs for focal species
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[123]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[123]
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Thamnophilus schistaceus", c("lon", "lat")], r, n=1) #136 obs for focal species
point_distribution
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[124]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[125]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[126]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[127]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[128]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[129]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[129]
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Turdus lawrencii", c("lon", "lat")], r, n=1) #136 obs for focal species
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[130]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
#make raster with 1000m grid cells
st_bbox(mdd)
r <- raster(xmn = -72.428739, xmx = -68.652279, ymn = -13.341717, ymx = -9.873393, res = 0.001)
#one point per grid cell -- 245 unique grid points distributed throughout BR
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Thamnophilus schistaceus", c("lon", "lat")], r, n=1) #136 obs for focal species
s0 <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName != "Thamnophilus schistaceus", c("lon", "lat")], r, n=1) #1874 obs for background species
#-------------------------------------------------------------#
#Create background mask using probability sampling            #
#-------------------------------------------------------------#
background <- pnts_mdd[pnts_mdd$scientificName != "Thamnophilus schistaceus", ]
bg_species_list <- unique(background$scientificName)
bg_points <- background %>% dplyr::select(c(lon, lat)) %>%
as.matrix()
bg_longlat <- cellFromXY(r, bg_points) %>% as.data.frame() %>%
cbind(background$year, background$scientificName) %>%
mutate(count = 1) %>% setNames(c("cell","year", "scientificName","count")) %>%
group_by(cell) %>% dplyr::summarize(count = sum(count),
scientificName = scientificName,
max_year = max(year),
avg_year = mean(year)) %>%
arrange(desc(count)) %>%
mutate(lon = xFromCell(r, cell),  # Acquire longitude (x) and latitude (y) from cell centroids
lat = yFromCell(r, cell)) %>%
dplyr::select(-cell) %>% # Cell number is now obsolete, since will be working from (x,y) as an sf object
filter(!is.na(lon) & !is.na(lat)) # Remove the NA locations
bg_mask_sf <- st_as_sf(bg_longlat, coords = c("lon","lat"),
agr = "constant", remove = FALSE, crs = 4326)
# Random sample bg without replacement from weighted bias mask at (2x occ) multiplier
set.seed(109)
multiplier <- 2
bg_mask_weights <- bg_mask_sf %>%
mutate(weight = count/sum(count))
bg_mask_df <- bg_mask_sf[sample(nrow(bg_mask_weights),
size = multiplier * nrow(s), # s is from earlier code chunk, # of occ points
replace = FALSE,
prob = bg_mask_weights$weight),]
#make bkg dataset match presence
bg_mask_df <- st_drop_geometry(bg_mask_df)
names(bg_mask_df)[c(4)] <- c("year"); bg_mask_df <- bg_mask_df[, c("scientificName", "year", "lon", "lat")]
#make sure bkg points are labeled
bg_mask_df$presence <- 0
#subset presence points to thin set, make sure it is lableled
occ_points <- pnts_mdd[row.names(s), c("scientificName", "year", "lon", "lat")]; occ_points$presence <- 1
#final passerine occ set
final_pass <- rbind(occ_points, bg_mask_df)
#add in row identifier for GEE
final_pass$row_code <- seq(1, nrow(final_pass), by = 1)
write.csv(final_pass, "final_bird_dataset_Oct23_2022.csv")
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
##for mapping purposes
final_pass$species <- ifelse(final_pass$scientificName == "Thamnophilus schistaceus",
"R_fuscicauda", "bkg_species")
# Plot each species
point_distribution <- ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = final_pass,
aes(x = lon, y = lat, color = species), size = 1, alpha = 0.5) +
theme_minimal() +
no_axis
point_distribution
#make raster with 1000m grid cells
st_bbox(mdd)
r <- raster(xmn = -72.428739, xmx = -68.652279, ymn = -13.341717, ymx = -9.873393, res = 0.001)
#one point per grid cell -- 245 unique grid points distributed throughout BR
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Turdus lawrencii", c("lon", "lat")], r, n=1) #136 obs for focal species
s0 <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName != "Turdus lawrencii", c("lon", "lat")], r, n=1) #1874 obs for background species
#-------------------------------------------------------------#
#Create background mask using probability sampling            #
#-------------------------------------------------------------#
background <- pnts_mdd[pnts_mdd$scientificName != "Turdus lawrencii", ]
bg_species_list <- unique(background$scientificName)
#-----------------------------------------------------#
# Extract number of per grid cell                     #
#-----------------------------------------------------#
bg_points <- background %>% dplyr::select(c(lon, lat)) %>%
as.matrix()
bg_longlat <- cellFromXY(r, bg_points) %>% as.data.frame() %>%
cbind(background$year, background$scientificName) %>%
mutate(count = 1) %>% setNames(c("cell","year", "scientificName","count")) %>%
group_by(cell) %>% dplyr::summarize(count = sum(count),
scientificName = scientificName,
max_year = max(year),
avg_year = mean(year)) %>%
arrange(desc(count)) %>%
mutate(lon = xFromCell(r, cell),  # Acquire longitude (x) and latitude (y) from cell centroids
lat = yFromCell(r, cell)) %>%
dplyr::select(-cell) %>% # Cell number is now obsolete, since will be working from (x,y) as an sf object
filter(!is.na(lon) & !is.na(lat)) # Remove the NA locations
bg_mask_sf <- st_as_sf(bg_longlat, coords = c("lon","lat"),
agr = "constant", remove = FALSE, crs = 4326)
# Random sample bg without replacement from weighted bias mask at (2x occ) multiplier
set.seed(109)
multiplier <- 2
bg_mask_weights <- bg_mask_sf %>%
mutate(weight = count/sum(count))
bg_mask_df <- bg_mask_sf[sample(nrow(bg_mask_weights),
size = multiplier * nrow(s), # s is from earlier code chunk, # of occ points
replace = FALSE,
prob = bg_mask_weights$weight),]
#make bkg dataset match presence
bg_mask_df <- st_drop_geometry(bg_mask_df)
names(bg_mask_df)[c(4)] <- c("year"); bg_mask_df <- bg_mask_df[, c("scientificName", "year", "lon", "lat")]
#make sure bkg points are labeled
bg_mask_df$presence <- 0
#subset presence points to thin set, make sure it is lableled
occ_points <- pnts_mdd[row.names(s), c("scientificName", "year", "lon", "lat")]; occ_points$presence <- 1
#final passerine occ set
final_pass <- rbind(occ_points, bg_mask_df)
#add in row identifier for GEE
final_pass$row_code <- seq(1, nrow(final_pass), by = 1)
write.csv(final_pass, "final_bird_dataset_Oct23_2022.csv")
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
##for mapping purposes
final_pass$species <- ifelse(final_pass$scientificName == "Turdus lawrencii",
"R_fuscicauda", "bkg_species")
# Plot each species
point_distribution <- ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = final_pass,
aes(x = lon, y = lat, color = species), size = 1, alpha = 0.5) +
theme_minimal() +
no_axis
point_distribution
set.seed(999)
multiplier <- 2
bg_mask_weights <- bg_mask_sf %>%
mutate(weight = count/sum(count))
bg_mask_df <- bg_mask_sf[sample(nrow(bg_mask_weights),
size = multiplier * nrow(s), # s is from earlier code chunk, # of occ points
replace = FALSE,
prob = bg_mask_weights$weight),]
#make bkg dataset match presence
bg_mask_df <- st_drop_geometry(bg_mask_df)
names(bg_mask_df)[c(4)] <- c("year"); bg_mask_df <- bg_mask_df[, c("scientificName", "year", "lon", "lat")]
#make sure bkg points are labeled
bg_mask_df$presence <- 0
#subset presence points to thin set, make sure it is lableled
occ_points <- pnts_mdd[row.names(s), c("scientificName", "year", "lon", "lat")]; occ_points$presence <- 1
#final passerine occ set
final_pass <- rbind(occ_points, bg_mask_df)
#add in row identifier for GEE
final_pass$row_code <- seq(1, nrow(final_pass), by = 1)
write.csv(final_pass, "final_bird_dataset_Oct23_2022.csv")
#-------------------------------------------------------------#
#final figure to visualize distribution of points             #
#-------------------------------------------------------------#
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
##for mapping purposes
final_pass$species <- ifelse(final_pass$scientificName == "Turdus lawrencii",
"R_fuscicauda", "bkg_species")
# Plot each species
point_distribution <- ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = final_pass,
aes(x = lon, y = lat, color = species), size = 1, alpha = 0.5) +
theme_minimal() +
no_axis
point_distribution
point_distribution <- ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_jitter(data = final_pass,
aes(x = lon, y = lat, color = species), size = 1, alpha = 0.5) +
theme_minimal() +
no_axis
point_distribution
#one point per grid cell -- 245 unique grid points distributed throughout BR
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Eubucco richardsoni", c("lon", "lat")], r, n=1) #136 obs for focal species
s0 <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName != "Eubucco richardsoni", c("lon", "lat")], r, n=1) #1874 obs for background species
#-------------------------------------------------------------#
#Create background mask using probability sampling            #
#-------------------------------------------------------------#
background <- pnts_mdd[pnts_mdd$scientificName != "Eubucco richardsoni", ]
bg_species_list <- unique(background$scientificName)
#-----------------------------------------------------#
# Extract number of per grid cell                     #
#-----------------------------------------------------#
bg_points <- background %>% dplyr::select(c(lon, lat)) %>%
as.matrix()
bg_longlat <- cellFromXY(r, bg_points) %>% as.data.frame() %>%
cbind(background$year, background$scientificName) %>%
mutate(count = 1) %>% setNames(c("cell","year", "scientificName","count")) %>%
group_by(cell) %>% dplyr::summarize(count = sum(count),
scientificName = scientificName,
max_year = max(year),
avg_year = mean(year)) %>%
arrange(desc(count)) %>%
mutate(lon = xFromCell(r, cell),  # Acquire longitude (x) and latitude (y) from cell centroids
lat = yFromCell(r, cell)) %>%
dplyr::select(-cell) %>% # Cell number is now obsolete, since will be working from (x,y) as an sf object
filter(!is.na(lon) & !is.na(lat)) # Remove the NA locations
bg_mask_sf <- st_as_sf(bg_longlat, coords = c("lon","lat"),
agr = "constant", remove = FALSE, crs = 4326)
# Random sample bg without replacement from weighted bias mask at (2x occ) multiplier
set.seed(999)
multiplier <- 2
bg_mask_weights <- bg_mask_sf %>%
mutate(weight = count/sum(count))
bg_mask_df <- bg_mask_sf[sample(nrow(bg_mask_weights),
size = multiplier * nrow(s), # s is from earlier code chunk, # of occ points
replace = FALSE,
prob = bg_mask_weights$weight),]
#make bkg dataset match presence
bg_mask_df <- st_drop_geometry(bg_mask_df)
names(bg_mask_df)[c(4)] <- c("year"); bg_mask_df <- bg_mask_df[, c("scientificName", "year", "lon", "lat")]
#make sure bkg points are labeled
bg_mask_df$presence <- 0
#subset presence points to thin set, make sure it is lableled
occ_points <- pnts_mdd[row.names(s), c("scientificName", "year", "lon", "lat")]; occ_points$presence <- 1
#final passerine occ set
final_pass <- rbind(occ_points, bg_mask_df)
#add in row identifier for GEE
final_pass$row_code <- seq(1, nrow(final_pass), by = 1)
write.csv(final_pass, "final_bird_dataset_Oct23_2022.csv")
#-------------------------------------------------------------#
#final figure to visualize distribution of points             #
#-------------------------------------------------------------#
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
##for mapping purposes
final_pass$species <- ifelse(final_pass$scientificName == "Eubucco richardsoni",
"E_richardsoni", "bkg_species")
# Plot each species
point_distribution <- ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_jitter(data = final_pass,
aes(x = lon, y = lat, color = species), size = 1, alpha = 0.5) +
theme_minimal() +
no_axis
point_distribution
