ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[71]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[71]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[72]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[73]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[74]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[75]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[76]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[78]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[79]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
setwd("~/Documents/GitHub/UPCH-species-distribution-tutorial")
library(sf); library(rgbif); library(dplyr)
#read in IUCN species names for bats in Peru
iucn_species <- read_sf("iucn_peruvian_rodents") #this shape file was downloaded from ICUN redlist site
iucn_species
(iucn_species)[3]
names(iucn_species)[3] <- "scientificName" #needs to match gbif to work
#create a dataframe with the scientific name, and all the occurrences of the sandfly
latlong <- data.frame()
#for loop to get lat long
for (i in 1:166){
tryCatch({
b <- data.frame(occ_search(scientificName = iucn_species$scientificName[i])$data)
#filter so that only the recorded occurrences are in the dataframe
if("decimalLatitude" %in% colnames(b)){
c <- subset(b, select=c("scientificName", "decimalLatitude", "decimalLongitude", "year"))
#some of the occurrences have weird names, so we just rename that column to their scientific name
c[1:nrow(b), 1] <- iucn_species$scientificName[i]
latlong <- rbind(latlong, c)
}
}, error=function(e){})
}
#get rid of all the occurrences with no lat longs and create a csv
g <- latlong[complete.cases(latlong), ]
mdd0 <- read_sf("Madre_de_Dios");
mdd <- st_union(mdd0)
pnts_sf <- st_as_sf(g, coords = c('decimalLongitude', 'decimalLatitude'), crs = st_crs(mdd))
pnts_sf$indicator <- st_within(pnts_sf, mdd) %>% lengths > 0
pnts_mdd <- subset(pnts_sf, indicator == TRUE)
pnts_mdd <- pnts_mdd %>%
dplyr::mutate(lon = sf::st_coordinates(.)[,1],
lat = sf::st_coordinates(.)[,2])
pnts_mdd <- st_drop_geometry(pnts_mdd)
write.csv(pnts_mdd,"rodent_occ_pts_mdd.csv", row.names = TRUE)
###plot test
# Remove plot axis
library(ggplot2)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
names <- unique(pnts_mdd$scientificName) #look at distribution by species
table(pnts_mdd$scientificName)
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[1]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[1]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[2]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[3]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[4]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[4]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[5]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[6]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[6]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[7]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[8]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[9]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[10]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[10]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[11]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[12]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[13]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[14]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[15]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[15]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[16]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[17]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[18]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[18]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[19]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[19]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[20]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[21]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[22]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[23]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[24]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[25]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[26]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[27]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[27]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[28]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[29]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[30]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[31]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[32]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[33]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[34]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[35]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[36]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[37]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[38]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[39]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[39]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[40]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[41]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
setwd("~/Documents/GitHub/UPCH-species-distribution-tutorial")
library(sf); library(rgbif); library(dplyr)
dir()
setwd("~/Documents/GitHub/UPCH-species-distribution-tutorial")
library(sf); library(rgbif); library(dplyr)
#read in IUCN species names for bats in Peru
iucn_species <- read_sf("iucn_peruvian_passerines") #this shape file was downloaded from ICUN redlist site
names(iucn_species)[3] <- "scientificName" #needs to match gbif to work
#create a dataframe with the scientific name, and all the occurrences of the sandfly
latlong <- data.frame()
#for loop to get lat long
for (i in 1:1379){
tryCatch({
b <- data.frame(occ_search(scientificName = iucn_species$scientificName[i])$data)
#filter so that only the recorded occurrences are in the dataframe
if("decimalLatitude" %in% colnames(b)){
c <- subset(b, select=c("scientificName", "decimalLatitude", "decimalLongitude", "year"))
#some of the occurrences have weird names, so we just rename that column to their scientific name
c[1:nrow(b), 1] <- iucn_species$scientificName[i]
latlong <- rbind(latlong, c)
}
}, error=function(e){})
}
#get rid of all the occurrences with no lat longs and create a csv
g <- latlong[complete.cases(latlong), ]
#clip occurrence points to only ones that fall in MDD
mdd0 <- read_sf("Madre_de_Dios");
mdd <- st_union(mdd0)
pnts_sf <- st_as_sf(g, coords = c('decimalLongitude', 'decimalLatitude'), crs = st_crs(mdd))
pnts_sf$indicator <- st_within(pnts_sf, mdd) %>% lengths > 0
pnts_mdd <- subset(pnts_sf, indicator == TRUE)
pnts_mdd <- pnts_mdd %>%
dplyr::mutate(lon = sf::st_coordinates(.)[,1],
lat = sf::st_coordinates(.)[,2])
pnts_mdd <- st_drop_geometry(pnts_mdd)
write.csv(pnts_mdd,"passerine_occ_pts_mdd.csv", row.names = TRUE)
library(ggplot2)
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
names <- unique(pnts_mdd$scientificName) #look at distribution by species
names
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[1]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[2]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[3]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[3]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[4]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[5]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[6]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[7]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[8]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[8]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[9]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[10]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[10]
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[11]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[12]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[13]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[14]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=mdd, color="#2D3E50", fill="lightgrey", size=.15, show.legend = FALSE) +
geom_point(data = subset(pnts_mdd, scientificName == names[15]),
aes(x = lon, y = lat), alpha = 0.5) +
theme_minimal() +
no_axis
names[15]
table(mdd$scientificName)
table(pnts_mdd$scientificName)
r <- raster(ncol=180, nrow=180)
library(raster)
r <- raster(ncol=180, nrow=180)
r
r <- raster(ncol=180, nrow=180, res = 0.001)
r
extent(r) <- extent(mdd)
bbox(mdd)
mdd
st_bbox(mdd)
extent(r) <- st_bbox(mdd)
r
res(r)
?raster
st_bbox(mdd)
r <- raster(xmn = 72.428739, xmx = -68.652279, ymn = -13.341717, ymx = -9.873393, res = 0.001)
r <- raster(xmn = -72.428739, xmx = -68.652279, ymn = -13.341717, ymx = -9.873393, res = 0.001)
r
pnts_mdd
names(pnts_mdd)
names(pnts_mdd[4:5])
s <- gridSample(pnts_mdd[4:5], r, n=1)
s <- dismo::gridSample(pnts_mdd[4:5], r, n=1)
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Poecilotriccus albifacies", 4:5], r, n=1)
s <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName == "Corythopis torquatus", 4:5], r, n=1)
s
s0 <- dismo::gridSample(pnts_mdd[pnts_mdd$scientificName != "Corythopis torquatus", 4:5], r, n=1)
unique(pnts_mdd$year)
